MODEL:                                      #MODEL field
    framework: "Recognizer2D"               #Mandatory, indicate the type of network.
    backbone:                               #Mandatory, indicate the type of backbone.
        name: "ResNetTweaksTSM"             #Mandatory, The name of backbone.
        pretrained: "/home/PaddleVideo/applications/FootballAction/pretrain/ResNet50_vd_ssld_v2_pretrained.pdparams"
        num_seg: 8
        depth: 50                           #Optional, the depth of backbone architecture.
    head:
        name: "TSMHead"                     #Mandatory, indicate the type of head
        num_classes: 8      # 16                     #Optional, the number of classes to be classified.
        in_channels: 2048                   #input channel of the extracted feature.
        drop_ratio: 0.5                     #the ratio of dropout
        std: 0.01                           #std value in params initialization
        ls_eps: 0.1

DATASET:                                    #DATASET field
    batch_size: 16                          #Mandatory, bacth size
    test_batch_size: 16
    num_workers: 0 #4                          #Mandatory, XXX the number of subprocess on each GPU.
    train:
        format: "FrameDataset_Sport"              #Mandatory, indicate the type of dataset
        data_prefix: ""                     #Mandatory, train data root path
        file_path: "/home/PaddleVideo/applications/FootballAction/datasets/EuroCup2016/input_for_pptsm/train.list"     #Mandatory, train data index file path
        suffix: 'img_{:05}.jpg'
    valid:
        format: "FrameDataset_Sport"              #Mandatory, indicate the type of dataset
        data_prefix: ""                     #Mandatory, valid data root path
        file_path: "/home/PaddleVideo/applications/FootballAction/datasets/EuroCup2016/input_for_pptsm/val.list"       #Mandatory, valid data index file path
        suffix: 'img_{:05}.jpg'
    test:
        format: "FrameDataset_Sport"              #Mandatory, indicate the type of dataset
        data_prefix: ""                     #Mandatory, valid data root path
        file_path: "/home/PaddleVideo/applications/FootballAction/datasets/EuroCup2016/input_for_pptsm/val.list"       #Mandatory, valid data index file path
        suffix: 'img_{:05}.jpg'


PIPELINE:                                   #PIPELINE field
    train:                                  #Mandotary, indicate the pipeline to deal with the training data
        decode:
            name: "FrameDecoder"
        sample:
            name: "SamplerPkl"
            num_seg: 8
            seg_len: 1
            valid_mode: False
        transform:                          #Mandotary, image transfrom operator
            - Scale:
                short_size: 256
            - MultiScaleCrop:
                target_size: 256
            - RandomCrop:
                target_size: 224
            - RandomFlip:
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]

    valid:                                  #Mandatory, indicate the pipeline to deal with the validing data
        decode:
            name: "FrameDecoder"
        sample:
            name: "SamplerPkl"
            valid_mode: True
            num_seg: 8
            seg_len: 1
            valid_mode: True
        transform:
            - Scale:
                short_size: 256
            - CenterCrop:
                target_size: 224
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]

    test:
        decode:
            name: "FrameDecoder"
        sample:
            name: "SamplerPkl"
            valid_mode: True
            num_seg: 8
            seg_len: 1
            valid_mode: True
        transform:
            - Scale:
                short_size: 256
            - CenterCrop:
                target_size: 224
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]


OPTIMIZER:                                      #OPTIMIZER field
    name: 'Momentum'                            #Mandatory, the type of optimizer
    momentum: 0.9
    learning_rate:                              #Mandatory, the type of learning rate scheduler
        name: 'PiecewiseDecay'
        boundaries: [5, 7] #[40, 60]
        values: [0.01, 0.001, 0.0001]           #4 cards * 16 batch size
    weight_decay:
        name: 'L2'
        value: 2e-4

MIX:
    name: "Mixup"
    alpha: 0.2

METRIC:
    name: 'CenterCropMetric'

INFERENCE:
    name: 'ppTSM_Inference_helper'
    num_seg: 8
    target_size: 224

PRECISEBN:
    preciseBN_interval: 5                         # epoch interval to do preciseBN, default 1.
    num_iters_preciseBN: 5 #80                       # how many batches used to do preciseBN, default 200.

model_name: "ppTSM"
log_interval: 5 #20                                #Optional, the interal of logger, default:10
epochs: 10 #80                                      #Mandatory, total epoch
log_level: "INFO"                               #Optional, the logger level. default: "INFO"
resume_from: ""                                 #checkpoint path.
